{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny html_component configuration.\n * @module      tiny_html_components/commands\n * @copyright   2023 Gerbault Cédric, Anthony Durif, Université Clermont Auvergne\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {handleAction} from './ui';\nimport {get_string as getString} from 'core/str';\nimport {\n    component,\n    buttonName,\n    icon,\n} from './common';\n\nexport const getSetup = async() => {\n    const [\n        buttonText,\n        buttonImage,\n    ] = await Promise.all([\n        getString('addhtml_components', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        // Register the Filter WS Icon.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n        // Register the Menu Button.\n        editor.ui.registry.addButton(buttonName, {\n            icon,\n            tooltip: buttonText,\n            onAction: () => handleAction(editor),\n        });\n\n        // Add the Filter WS Menu Item.\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(buttonName, {\n            icon,\n            text: buttonText,\n            onAction: () => handleAction(editor),\n        });\n    };\n};"],"names":["_ref","getSetup","_regeneratorRuntime","mark","_callee","_yield$Promise$all","_yield$Promise$all2","buttonText","buttonImage","wrap","_context","prev","next","Promise","all","getString","component","getButtonImage","sent","_slicedToArray","abrupt","editor","ui","registry","addIcon","icon","html","addButton","buttonName","tooltip","onAction","handleAction","addMenuItem","text","stop","apply","this","arguments","_exports"],"mappings":"woYA+BO,OAAiBA,KAAXC,aAAWC,sBAAAC,MAAA,SAAAC,UAAA,IAAAC,mBAAAC,oBAAAC,WAAAC,YAAA,OAAAN,sBAAAO,MAAA,SAAAC,UAAA,cAAAA,SAAAC,KAAAD,SAAAE,MAAA,KAAA,EAAA,OAAAF,SAAAE,KAAA,EAIVC,QAAQC,IAAI,EAClB,EAAAC,KAAAA,YAAU,oBAAqBC,oBAC/B,EAAAC,OAAcA,gBAAC,OAAQD,QAAAA,aACzB,KAAA,EAJa,OAIbX,mBAAAK,SAAAQ,KAAAZ,oBAAAa,eAAAd,mBAAA,GALEE,WAAUD,oBAAA,GACVE,YAAWF,oBAAA,GAMRI,SAAAU,OAAA,UAAA,SAACC,QAEJA,OAAOC,GAAGC,SAASC,QAAQC,QAAAA,KAAMjB,YAAYkB,MAE7CL,OAAOC,GAAGC,SAASI,UAAUC,mBAAY,CACrCH,KAAAA,QAAIA,KACJI,QAAStB,WACTuB,SAAU,WAAA,OAAM,EAAAC,IAAAA,cAAaV,OAAO,IAKxCA,OAAOC,GAAGC,SAASS,YAAYJ,mBAAY,CACvCH,KAAAA,QAAIA,KACJQ,KAAM1B,WACNuB,SAAU,WAAA,OAAM,EAAAC,IAAAA,cAAaV,OAAO,OAE3C,KAAA,EAAA,IAAA,MAAA,OAAAX,SAAAwB,OAAA,GAAA9B,QACJ,IA3BuBJ,oTA2BvB,WA3BoB,OAAAA,KAAAmC,MAAAC,KAAAC,UAAA,GA2BnBC,SAAArC,SAAAA,QAAA"}